apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply from: 'http://dl.bintray.com/shemnon/javafx-gradle/0.4.0/javafx.plugin'
apply plugin: 'gradle-one-jar'
apply plugin: 'shadow'

buildscript {

    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            name 'Gradle Shadow'
            url 'http://dl.bintray.com/content/johnrengelman/gradle-plugins'
        }
        dependencies {
            classpath 'com.github.rholder:gradle-one-jar:1.0.3'
            classpath 'org.gradle.plugins:shadow:0.7.4'
		}
    }
}

// apply vrl license header plugin
//if (!project.plugins.findPlugin(eu.mihosoft.vrl.vlicenseheaderutil.gradle.VLicenseHeaderPlugin)) {
//    project.apply(plugin: eu.mihosoft.vrl.vlicenseheaderutil.gradle.VLicenseHeaderPlugin)
//}

repositories {
	mavenLocal()
    mavenRepo urls: "https://oss.sonatype.org/content/repositories/snapshots/"
    mavenCentral()
}


dependencies {
	compile group: 'org.controlsfx', name: 'fxsampler', version: '1.0.3'
    compile group: 'org.jfxtras', name: 'jfxtras-labs', version: '8.0-r1-SNAPSHOT'
    runtime group: 'org.jfxtras', name: 'jfxtras-labs', version: '8.0-r1-SNAPSHOT', classifier: 'javadoc'
}

apply {
    from 'gradle/mavenCentralDeploy.gradle'
}

// license template (will be used as header in all Java source files)
//repairHeaders.licenseHeaderText = new File(projectDir,"license-template.txt")

task buildTimestamped(type: Copy, dependsOn: 'build') {
    from 'build/libs'
    into 'build/libs/timestamped'
    include '*.jar'
    rename { String fileName ->
        fileName.replace('SNAPSHOT', "SNAPSHOT-${new Date().format('HH-mm-dd-MM-yyyy')}")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}

signArchives.onlyIf {
    project.hasProperty('signing.keyId')
}

// gradle assemble to build the distribution
// http://jaxenter.com/tutorial-a-guide-to-the-gradle-javafx-plugin-46270.html
javafx {
    appID 'JFXtrasSamples'
    appName 'JFXtras samples'
    mainClass 'fxsampler.FXSampler'
    javaRuntime = '<NO RUNTIME>' // for now don't bundle a VM
}

// make a compound jar containing all required jars
task oneJar(type: OneJar) {
    mainClass = 'fxsampler.FXSampler'
    useStable = false
    manifest {
        attributes 'One-Jar-URL-Factory': 'com.simontuffs.onejar.JarClassLoader$OneJarURLFactory'
    }
}

// merge everything into one jar
// https://github.com/johnrengelman/shadow
shadow {
}

uploadArchives.onlyIf {
    project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')
}

task copyToLib(type: Copy) {
    into "_lib"
    from configurations.testCompile
}
